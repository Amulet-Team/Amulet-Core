from collections.abc import Iterator, Mapping
from typing import overload

class IdRegistry(Mapping[int, tuple[str, str]]):
    def __init__(self) -> None: ...
    def numerical_id_to_namespace_id(self, index: int) -> tuple[str, str]: ...
    def namespace_id_to_numerical_id(self, namespace: str, base_name: str) -> int: ...
    def register(self, index: int, block_id: tuple[str, str]) -> None: ...
    @overload
    def __getitem__(self, key: int) -> tuple[str, str]: ...
    @overload
    def __getitem__(self, key: tuple[str, str]) -> int: ...
    def __len__(self) -> int: ...
    def __iter__(self) -> Iterator[int]: ...
