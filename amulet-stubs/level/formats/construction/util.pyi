import numpy
from amulet.block import Block as Block
from amulet.block_entity import BlockEntity as BlockEntity
from amulet.entity import Entity as Entity
from amulet.palette import BlockPalette as BlockPalette
from amulet_nbt import ByteArrayTag, CompoundTag, IntArrayTag, ListTag, LongArrayTag
from typing import List, Type, Union

def unpack_palette(raw_palette: ListTag) -> List[Block]: ...
def parse_entities(entities: ListTag) -> List[Entity]: ...
def parse_block_entities(block_entities: ListTag) -> List[BlockEntity]: ...
def generate_block_entry(block: Block, palette_len, extra_blocks) -> CompoundTag: ...
def serialise_entities(entities: List[Entity]) -> ListTag: ...
def serialise_block_entities(block_entities: List[BlockEntity]) -> ListTag: ...
def find_fitting_array_type(array: numpy.ndarray) -> Union[Type[IntArrayTag], Type[ByteArrayTag], Type[LongArrayTag]]: ...
def pack_palette(palette: BlockPalette) -> ListTag: ...
